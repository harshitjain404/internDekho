// login LoginModal

// import React, { useState } from "react";
// import { auth, db } from "../firebaseConfig";
// import { signInWithEmailAndPassword, createUserWithEmailAndPassword } from "firebase/auth";
// import { collection, addDoc } from "firebase/firestore";
// import { useNavigate } from "react-router-dom";

// function LoginModal({ isOpen, onClose }) {
//     const [formData, setFormData] = useState({ email: "", password: "", phone: "", firstName: "", lastName: "" });
//     const [isLogin, setIsLogin] = useState(true);

// let navigate = useNavigate();
//     // const handleAuth = async () => {
//     //     const { email, password, phone, firstName, lastName } = formData;
//     //     if (!email || !password) return alert("Email and password are required.");

//     //     try {
//     //         if (isLogin) {
//     //             await signInWithEmailAndPassword(auth, email, password);
//     //             alert("Logged in successfully.");
//     //             const user = localStorage.setItem("user", JSON.stringify({ email }));
//     //             console.log(user);
             
//     //             onClose();
//     //         } else {
//     //             if (!phone || !firstName || !lastName) return alert("Please fill all fields.");

//     //             const userCredential = await createUserWithEmailAndPassword(auth, email, password);
//     //             await addDoc(collection(db, "employers"), { uid: userCredential.user.uid, email, phone, firstName, lastName });
//     //             onClose();
//     //         }
//     //     } catch (error) {
//     //         alert(error.message);
//     //     }
//     // };

//     const handleAuth = async () => {
//         const { email, password, phone, firstName, lastName } = formData;
//         if (!email || !password) return alert("Email and password are required.");
    
//         try {
//             if (isLogin) {
//                 const userCredential = await signInWithEmailAndPassword(auth, email, password);
//                 const user = userCredential.user; // ✅ Get user object from Firebase
//                 localStorage.setItem("user", JSON.stringify({ uid: user.uid, email: user.email }));
//                 console.log("User stored:", JSON.parse(localStorage.getItem("user"))); // ✅ Correctly log user
//                 alert("Logged in successfully.");
//                     navigate("/employer-dashboard");
//                 onClose();
//             } else {
//                 if (!phone || !firstName || !lastName) return alert("Please fill all fields.");
    
//                 const userCredential = await createUserWithEmailAndPassword(auth, email, password);
//                 const user = userCredential.user; // ✅ Get user
//                 await addDoc(collection(db, "employers"), { uid: user.uid, email, phone, firstName, lastName });
                
//                 localStorage.setItem("user", JSON.stringify({ uid: user.uid, email: user.email }));
//                 console.log("User stored:", JSON.parse(localStorage.getItem("user")));
//                 onClose();
//             }
//         } catch (error) {
//             alert(error.message);
//         }
//     };
//     if (!isOpen) return null;

//     return (
//         <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50">
//             <div className="relative bg-white p-6 rounded-lg w-full max-w-md shadow-2xl z-50">
//                 <button onClick={onClose} className="absolute top-2 right-4 text-xl font-bold text-gray-600">&times;</button>
//                 <h2 className="text-2xl font-semibold text-gray-700 mb-4">{isLogin ? "Employer Login" : "Employer Sign Up"}</h2>
//                 <input type="email" placeholder="Email" onChange={(e) => setFormData({ ...formData, email: e.target.value })} className="w-full border p-2 rounded-md mb-2" />
//                 <input type="password" placeholder="Password" onChange={(e) => setFormData({ ...formData, password: e.target.value })} className="w-full border p-2 rounded-md mb-2" />
//                 <button onClick={handleAuth} className="w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold p-2 mt-4 rounded-md">{isLogin ? "Login" : "Sign Up"}</button>
//             </div>
//         </div>
//     );
// }

// export default LoginModal;






// navbar code




// import React, { useState, useEffect } from "react";
// import MenuIcon from "@mui/icons-material/Menu";
// import CloseIcon from "@mui/icons-material/Close";
// import { getAuth, signInWithPopup, GoogleAuthProvider } from "firebase/auth";
// import {app} from "../utils/firebase";

// import { useNavigate } from "react-router-dom";

// const Navbar = () => {
//   let navigate = useNavigate();
//   const [hamburger, setHamburger] = useState(false);
//   const [user, setUser] = useState({});
//   useEffect(() => {
//     const user = JSON.parse(localStorage.getItem("user"));
//     console.log(user);
//     if (user) {
//       setUser(user);
//       navigate("/internships");
//     }
//   }, []);
//   const logOutUser = () => {
   
//     localStorage.removeItem("user");
//     setUser({});
//     alert("Logged Out");
//     navigate("/")
//   };
//   const googleUserLogin = () => {
//     const auth = getAuth(app);
//     const provider = new GoogleAuthProvider();
//     signInWithPopup(auth, provider)
//       .then(async (result) => {
//         const credential = GoogleAuthProvider.credentialFromResult(result);
//         const token = credential.accessToken;
//         let _user = {
//           email: result.user.email,
//           uid: result.user.uid,
//           name: result.user.displayName,
//           token,
//         };
//         console.log(_user);
//         setUser(_user);
//         localStorage.setItem("user", JSON.stringify(_user));
//         navigate("/internships");
//       })
//       .catch((error) => {
//         const errorCode = error.code;
//         const errorMessage = error.message;
//         const email = error.customData.email;
//         const credential = GoogleAuthProvider.credentialFromError(error);
//       });
//   };

//   return (
//     <div className="flex justify-between items-center p-4 shadow-lg">
//       {/* Sidebar starts */}
//       <div
//         className=" flex flex-col justify-between w-3/6 sm:w-56"
//         style={{
//           minHeight: "100vh",
//           background: "rgb(57 61 70 / 94%)",
//           padding: 10,
//           boxShadow: "6px 0px 2px rgba(0, 0, 0, 0.15)",
//           zIndex: 2,
//           position: "fixed",
//           top: 0,
//           left: !hamburger ? "-100%" : 0,
//           bottom: 0,
//           transition: "300ms ease-in",
//         }}
//       >
//         <span
//           onClick={() => setHamburger(false)}
//           style={{
//             position: "absolute",
//             right: 10,
//             top: 10,
//             zIndex: 2,
//             cursor: "pointer",
//           }}
//         >
//           <CloseIcon style={{ color: "white" }} />
//         </span>
//         <div>
//           <div className="flex flex-col gap-7 pr-8 justify-center items-center pt-11 ">
//             <div onClick={() => navigate("/")} className="cursor-pointer text-lg hover:font-bold text-white">
//               Home{" "}
             
//             </div>
//             <div>
//               {!localStorage.getItem("user") ? (
//                 <button
//                   onClick={googleUserLogin}
//                   className="cursor-pointer text-lg hover:bg-orange-400 bg-navOrange rounded-md px-4 py-1 "
//                 >
//                   Login
//                 </button>
//               ) : (
//                 <button
//                   onClick={logOutUser}
//                   className="cursor-pointer text-lg hover:bg-orange-400 bg-navOrange rounded-md px-4 py-1 "
//                 >
//                   {user?.name}
//                 </button>
//               )}
//             </div>

//           </div>
//         </div>
//       </div>
//       {/* Sidebar Ends */}
//       <div className="flex flex-row sm:pl-8">
//         <div onClick={() => navigate("/")}>
//           <img src="logo.jpg" alt="" className="h-8 sm:h-10" />
//         </div>
//       </div>
//       <div className="hidden md:flex flex-row gap-7 pr-8 justify-center items-center ">
//         <div onClick={() => navigate("/internships")} className="cursor-pointer text-lg hover:font-bold">Dashboard </div>
//         <div onClick={() => navigate("/employer")} className="cursor-pointer text-lg hover:font-bold">Employer </div>
//         {!localStorage.getItem("user") ? (
//           <button
//             onClick={googleUserLogin}
//             className="cursor-pointer text-lg hover:bg-orange-400 bg-navOrange rounded-md px-4 py-1 "
//           >
//             Login
//           </button>
//         ) : (
//           <button
//             onClick={logOutUser}
//             className="cursor-pointer text-lg hover:bg-orange-400 bg-navOrange rounded-md px-4 py-1 "
//           >
//             {user?.name}
//           </button>
//         )}
//       </div>
//       <div
//         className="md:hidden cursor-pointer"
//         onClick={() => {
//           setHamburger(true);
//           console.log("yes", hamburger);
//         }}
//       >
//         <MenuIcon
//           className="text-black"
//           style={{ height: "32px", width: "32px" }}
//         />
//       </div>
//     </div>
//   );
// };

// export default Navbar;


// import React, { useState, useEffect } from "react";
// import MenuIcon from "@mui/icons-material/Menu";
// import CloseIcon from "@mui/icons-material/Close";
// import { getAuth, signInWithPopup, GoogleAuthProvider } from "firebase/auth";
// import { app } from "../utils/firebase";
// import { useNavigate } from "react-router-dom";

// const Navbar = ({setModalOpen}) => {
//   let navigate = useNavigate();
//   const [hamburger, setHamburger] = useState(false);
//   const [user, setUser] = useState(null); // Changed from {} to null to check if logged in

//   useEffect(() => {
//     const storedUser = JSON.parse(localStorage.getItem("user"));
//     console.log( "this is the user logged in" + storedUser);
//     if (storedUser) {
//       setUser(storedUser);
//       console.log(user);
//     }
//   }, []);

//   const logOutUser = () => {
//     console.log(user + "this is the user that logged out");
//     localStorage.removeItem("user");
//     setUser(null);
//     alert("Logged Out");
//     navigate("/");
//   };

//   const googleUserLogin = () => {
    
//     const auth = getAuth(app);
//     const provider = new GoogleAuthProvider();
//     signInWithPopup(auth, provider)
//       .then((result) => {
//         const credential = GoogleAuthProvider.credentialFromResult(result);
//         const token = credential.accessToken;
//         let _user = {
//           email: result.user.email,
//           uid: result.user.uid,
//           name: result.user.displayName,
//           token,
//         };
//         setUser(user);
//         alert("Logged In");
//         localStorage.setItem("user", JSON.stringify(_user));
//         navigate("/internships");
//       })
//       .catch((error) => {
//         console.error("Login error:", error.message);
//       });
//   };

//   return (
//     <div className="flex justify-between items-center p-4 shadow-lg">
//       {/* Sidebar starts */}
//       <div
//         className="flex flex-col justify-between w-3/6 sm:w-56"
//         style={{
//           minHeight: "100vh",
//           background: "rgb(57 61 70 / 94%)",
//           padding: 10,
//           boxShadow: "6px 0px 2px rgba(0, 0, 0, 0.15)",
//           zIndex: 2,
//           position: "fixed",
//           top: 0,
//           left: !hamburger ? "-100%" : 0,
//           bottom: 0,
//           transition: "300ms ease-in",
//         }}
//       >
//         <span
//           onClick={() => setHamburger(false)}
//           style={{
//             position: "absolute",
//             right: 10,
//             top: 10,
//             zIndex: 2,
//             cursor: "pointer",
//           }}
//         >
//           <CloseIcon style={{ color: "white" }} />
//         </span>
//         <div>
//           <div className="flex flex-col gap-7 pr-8 justify-center items-center pt-11">
//             <div onClick={() => navigate("/")} className="cursor-pointer text-lg hover:font-bold text-white">
//               Home
//             </div>
//             <div>
//               {!user ? (
//                 <button
//                   onClick={googleUserLogin}
//                   className="cursor-pointer text-lg hover:bg-orange-400 bg-navOrange rounded-md px-4 py-1"
//                 >
//                   Login
//                 </button>
//               ) : (
//                 <button
//                   onClick={logOutUser}
//                   className="cursor-pointer text-lg hover:bg-orange-400 bg-navOrange rounded-md px-4 py-1"
//                 >
//                   {user.name}
//                 </button>
//               )}
//             </div>
//           </div>
//         </div>
//       </div>
//       {/* Sidebar Ends */}

//       <div className="flex flex-row sm:pl-8">
//         <div onClick={() => navigate("/")}>
//           <img src="logo.jpg" alt="Logo" className="h-8 sm:h-10" />
//         </div>
//       </div>

//       <div className="hidden md:flex flex-row gap-7 pr-8 justify-center items-center">
//         <div onClick={() => navigate("/internships")} className="cursor-pointer text-lg hover:font-bold">
//           Dashboard
//         </div>
//         <div onClick={() => navigate("/employer")} className="cursor-pointer text-lg hover:font-bold">
//           Employer
//         </div>
//         {!user ? (
//          <button onClick={() => setModalOpen(true)} className="cursor-pointer text-lg hover:bg-orange-400 bg-navOrange rounded-md px-4 py-1">
//          Login
//      </button>
//         ) : (
//           <button
//             onClick={logOutUser}
//             className="cursor-pointer text-lg hover:bg-orange-400 bg-navOrange rounded-md px-4 py-1"
//           >
//            Sign Out
//           </button>
//         )}
//       </div>
//       {/* <button
//             onClick={logOutUser}
//             className="cursor-pointer text-lg hover:bg-orange-400 bg-navOrange rounded-md px-4 py-1"
//           >
//             Logout
//           </button> */}
//       <div
//         className="md:hidden cursor-pointer"
//         onClick={() => {
//           setHamburger(true);
//         }}
//       >
//         <MenuIcon className="text-black" style={{ height: "32px", width: "32px" }} />
//       </div>
//     </div>
//   );
// };

// export default Navbar;






// employer Dashboard


// import React , {useState , useEffect} from 'react'
// import { auth, db } from "./firebaseConfig";
// import { collection, addDoc, getDocs } from "firebase/firestore";
import FetchInternships from './fetchInternships';


// function EmployerDashboard() {

//       const [internships, setInternships] = useState([]);
//     const [newInternship, setNewInternship] = useState({ title: "", description: "" });
//     useEffect(() => {
//         fetchInternships();
//     }, []);

//     const fetchInternships = async () => {
//         const querySnapshot = await getDocs(collection(db, "internships"));
//         const internshipsData = querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));
//         setInternships(internshipsData);
//     };

//       const postInternship = async () => {
//     if (!newInternship.title || !newInternship.description) {
//       alert("Please fill in all fields");
//       return;
//     }
//     await addDoc(collection(db, "internships"), newInternship);
//     setNewInternship({ title: "", description: "" });
//     fetchInternships();
//   };

    
//   return (
//     <div
//       style={{
//         display: "flex",
//         flexDirection: "column",
//         alignItems: "center ",
//         alignContent:"center",
//         height: "100vh",
//         margin: " auto",
//         marginTop: "5vh",
//     }}
//     >
          
          
//       {/* Post Internship */}
//       <div  className="mt-8 bg-white shadow-lg p-6 rounded-lg w-full max-w-lg">
//         <div
//         style={{
//           display: "flex",
//           flexDirection: "column",
//           alignItems: "center ",
//           alignContent:"center",
//           height: "40vh",
//           margin: " auto",
//           marginTop: "5vh",
//           boxShadow: "0 4px 6px rgba(0, 0, 0, 0.5)",
//             borderRadius: "10px",
//           padding: "20px",
//           // justifyContent: "center",
//         }}  className="internship_post">
          
      
//         <h2 className="text-xl font-bold text-gray-700">Post an Internship</h2>
//         <input
//           type="text"
//           placeholder="Internship Title"
//           value={newInternship.title}
//           onChange={(e) => setNewInternship({ ...newInternship, title: e.target.value })}
//           className="w-full border rounded-lg p-2 mt-2"
//         />
//         <textarea
//           placeholder="Internship Description"
//           value={newInternship.description}
//           onChange={(e) => setNewInternship({ ...newInternship, description: e.target.value })}
//           className="w-full border rounded-lg p-2 mt-2"
//         />
//         <button
//           onClick={postInternship}
//           className="w-full bg-green-500 hover:bg-green-600 text-white font-semibold p-2 mt-4 rounded-lg"
//         >
//           Post Internship
//         </button>
//       </div>
//       </div>
//       {/* Display Internships */}
//        <div className="mt-8 bg-white shadow-lg p-6 rounded-lg w-full max-w-lg">
//         <h2 className="text-xl font-bold text-gray-700">Your Internships</h2>
//         {internships.length === 0 ? (
//           <p className="text-gray-500 mt-2">No internships posted yet.</p>
//         ) : (
//           <ul className="mt-4 space-y-3">
//             {internships.map((internship) => (
//               <li key={internship.id} className="border p-3 rounded-lg shadow-sm">
//                 <strong className="text-lg">{internship.title}</strong>
//                 <p className="text-gray-600">{internship.description}</p>
//               </li>
//             ))}
//           </ul>
//         )}
//       </div>
//     </div>
//   )
// }

// export default EmployerDashboard

// POST FetchInternships




//   import React, { useState } from "react";
// import { db } from "./firebaseConfig"; // Import Firebase Firestore
// import { collection, addDoc } from "firebase/firestore";

// import EmployerNavbar from "./Components/employernavbar";
// import LoginModal from "./Components/LoginModal";


// const InternshipForm = () => {

//       const [isModalOpen, setModalOpen] = useState(false);
//   const [formData, setFormData] = useState({
//     profile: "",
//     skills: "",
//     type: "In office",
//     time: "Full-time",
//     openings: "",
//     startDate: "Immediate",
//     duration: "",
//     responsibilities: "",
//     preferences: "",
//     stipend: "Paid",
//     minStipend: "",
//     maxStipend: "",
//     incentivesMin: "",
//     incentivesMax: "",
//     perks: [],
//     ppo: false,
//     availability: "",
//     contactNumber: "",
//   });

//   const handleChange = (e) => {
//     const { name, value, type, checked } = e.target;
//     if (type === "checkbox") {
//       setFormData((prev) => ({
//         ...prev,
//         perks: checked ? [...prev.perks, value] : prev.perks.filter((p) => p !== value),
//       }));
//     } else {
//       setFormData((prev) => ({
//         ...prev,
//         [name]: value,
//       }));
//     }
//   };
//   const [loading, setLoading] = useState(false);
//   const handleSubmit = async (e) => {
//     e.preventDefault();
//     setLoading(true);

//     try {
//       await addDoc(collection(db, "internships"), formData);
//       alert("Internship posted successfully!");
//       setFormData({
//         profile: "",
//         skills: "",
//         type: "In office",
//         time: "Full-time",
//         openings: "",
//         startDate: "Immediate",
//         duration: "",
//         responsibilities: "",
//         preferences: "",
//         stipend: "Paid",
//         minStipend: "",
//         maxStipend: "",
//         incentivesMin: "",
//         incentivesMax: "",
//         perks: [],
//         ppo: false,
//         availability: "",
//         contactNumber: "",
//       });
//     } catch (error) {
//       console.error("Error adding document: ", error);
//       alert("Failed to post internship. Try again.");
//       setFormData({
//         profile: "",
//         skills: "",
//         type: "In office",
//         time: "Full-time",
//         openings: "",
//         startDate: "Immediate",
//         duration: "",
//         responsibilities: "",
//         preferences: "",
//         stipend: "Paid",
//         minStipend: "",
//         maxStipend: "",
//         incentivesMin: "",
//         incentivesMax: "",
//         perks: [],
//         ppo: false,
//         availability: "",
//         contactNumber: "",
//       });
//     }

//     setLoading(false);
//   };

//   return (
//     <>
//       <EmployerNavbar setModalOpen={setModalOpen} />
//       <LoginModal isOpen={isModalOpen} onClose={() => setModalOpen(false)} />
//     <div
//       style={{
//         height: "100%",
//         boxShadow: "0 4px 6px rgba(0, 0, 0, 0.5)",
//         borderRadius: "10px",
//         marginTop: "10vh",
//         padding: "20px",
//       }}
//       className="max-w-4xl mx-auto p-6 bg-white shadow-lg rounded-lg">
//       <h2
//         style={{
//           // display: "inline-block",
//           fontSize: "3.5rem",
//           textAlign: "center",
//           marginBottom: "10vh",
          
//         }}
//         className="text-2xl font-bold mb-4">Internship Details</h2>
//       <form onSubmit={handleSubmit} className="space-y-4">
//         {/* Internship Profile */}
//         <label className="block">
//           <span className="">Internship Profile</span>
//           <input
//             type="text"
//             name="profile"
//             value={formData.profile}
//             onChange={handleChange}
//             className="w-full p-2 border rounded mt-1"
//             placeholder="e.g. Android App Development"
//             required
//           />
//         </label>

//         {/* Skills Required */}
//         <label className="block">
//           <span className="">Skills Required</span>
//           <input
//             type="text"
//             name="skills"
//             value={formData.skills}
//             onChange={handleChange}
//             className="w-full p-2 border rounded mt-1"
//             placeholder="e.g. Java, React"
//           />
//         </label>

//         {/* Internship Type */}
//         <fieldset>
//           <span className="">Internship Type</span>
//           <div className="flex space-x-4">
//             {["In office", "Hybrid", "Remote"].map((option) => (
//               <label key={option}>
//                 <input
//                   type="radio"
//                   name="type"
//                   value={option}
//                   checked={formData.type === option}
//                   onChange={handleChange}
//                 />
//                 {option}
//               </label>
//             ))}
//           </div>
//         </fieldset>

//         {/* Part-time / Full-time */}
//         <fieldset>
//           <span className="">Part-time/Full-time</span>
//           <div className="flex space-x-4">
//             {["Part-time", "Full-time"].map((option) => (
//               <label key={option}>
//                 <input
//                   type="radio"
//                   name="time"
//                   value={option}
//                   checked={formData.time === option}
//                   onChange={handleChange}
//                 />
//                 {option}
//               </label>
//             ))}
//           </div>
//         </fieldset>

//         {/* Number of Openings */}
//         <label className="block">
//           <span className="">Number of Openings</span>
//           <input
//             type="number"
//             name="openings"
//             value={formData.openings}
//             onChange={handleChange}
//             className="w-full p-2 border rounded mt-1"
//             placeholder="e.g. 4"
//           />
//         </label>

//         {/* Internship Start Date */}
//         <fieldset>
//           <span className="">Internship Start Date</span>
//           <div className="flex space-x-4">
//             {["Immediate", "Later"].map((option) => (
//               <label key={option}>
//                 <input
//                   type="radio"
//                   name="startDate"
//                   value={option}
//                   checked={formData.startDate === option}
//                   onChange={handleChange}
//                 />
//                 {option}
//               </label>
//             ))}
//           </div>
//         </fieldset>

//         {/* Internship Duration */}
//         <label className="block">
//           <span className="">Internship Duration</span>
//           <input
//             type="text"
//             name="duration"
//             value={formData.duration}
//             onChange={handleChange}
//             className="w-full p-2 border rounded mt-1"
//             placeholder="e.g. 3 months"
//           />
//         </label>

//         {/* Stipend */}
//         <fieldset>
//           <span className="">Stipend</span>
//           <div className="flex space-x-4">
//             {["Paid", "Unpaid"].map((option) => (
//               <label key={option}>
//                 <input
//                   type="radio"
//                   name="stipend"
//                   value={option}
//                   checked={formData.stipend === option}
//                   onChange={handleChange}
//                 />
//                 {option}
//               </label>
//             ))}
//           </div>
//         </fieldset>

//         {/* Fixed Stipend */}
//         {formData.stipend === "Paid" && (
//           <div className="flex space-x-4">
//             <input
//               type="number"
//               name="minStipend"
//               value={formData.minStipend}
//               onChange={handleChange}
//               className="w-1/2 p-2 border rounded mt-1"
//               placeholder="Min ₹"
//             />
//             <input
//               type="number"
//               name="maxStipend"
//               value={formData.maxStipend}
//               onChange={handleChange}
//               className="w-1/2 p-2 border rounded mt-1"
//               placeholder="Max ₹"
//             />
//           </div>
//         )}

//         {/* Perks */}
//         <fieldset>
//           <span className="">Perks</span>
//           <div className="flex flex-wrap gap-4">
//             {["Certificate", "Letter of recommendation", "Flexible work hours", "Free snacks & beverages"].map((perk) => (
//               <label key={perk}>
//                 <input
//                   type="checkbox"
//                   name="perks"
//                   value={perk}
//                   checked={formData.perks.includes(perk)}
//                   onChange={handleChange}
//                 />
//                 {perk}
//               </label>
//             ))}
//           </div>
//         </fieldset>

//         {/* PPO */}
//         <label className="block">
//           <input
//             type="checkbox"
//             name="ppo"
//             checked={formData.ppo}
//             onChange={(e) => setFormData({ ...formData, ppo: e.target.checked })}
//           />
//           <span className="ml-2">Does this internship come with a pre-placement offer (PPO)?</span>
//         </label>

//         {/* Contact Info */}
//         <label className="block">
//           <span className="">Alternate Mobile Number</span>
//           <input
//             type="text"
//             name="contactNumber"
//             value={formData.contactNumber}
//             onChange={handleChange}
//             className="w-full p-2 border rounded mt-1"
//             placeholder="+91 9876543210"
//           />
//         </label>

//         {/* Submit Button */}
//         <button type="submit" className="w-full bg-blue-500 text-white p-3 rounded hover:bg-blue-600">
//           Post Internship
//         </button>
//       </form>
//       </div>
//       </>
//   );
// };

// export default InternshipForm;